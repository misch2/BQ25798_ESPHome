{% include "/globals.j2" -%}

#include "bq25798_text_sensor.h"

#include "esphome/core/log.h"

namespace esphome {
namespace bq25798 {

static const char* const TAG = "bq25798.text_sensor";

float BQ25798TextSensor::get_setup_priority() const { return setup_priority::DATA; }

void BQ25798TextSensor::dump_config() {
  ESP_LOGCONFIG(TAG, "Dumping BQ25798TextSensor configuration...");
  if (this->parent_->is_failed()) {
    return;
  }

{% for def in settings %}
{%     if def._is_ha_text_sensor %}
  if (this->text_sensor_{{ def._snake_case_name }}_ != nullptr) {
    LOG_TEXT_SENSOR("  ", "{{ def.name }}", this->text_sensor_{{ def._snake_case_name }}_);
  }
{%     endif %}
{% endfor %}
  LOG_TEXT_SENSOR("  ", "all_flags", this->text_sensor_all_flags_);

  LOG_UPDATE_INTERVAL(this);
}

void BQ25798TextSensor::update() {
  if (this->parent_->is_failed()) {
    return;
  }

{% for def in settings %}
  // {{ def.name }} - {{ def.description }}
{%     if def._is_ha_text_sensor %}
  if (this->text_sensor_{{ def._snake_case_name }}_ != nullptr) {   
    this->text_sensor_{{ def._snake_case_name }}_->publish_state(this->parent_->get_{{ def._snake_case_name }}_enum_string());   
  }   
{%     endif %}   
{% endfor %}
  if (this->text_sensor_all_flags_ != nullptr) {
    this->text_sensor_all_flags_->publish_state(this->get_all_flags_string());
  }
}

std::string BQ25798TextSensor::get_all_flags_string() {
  std::string ret;
{% for def in settings %}
{%     if def._is_flag %}
  if (this->parent_->get_{{ def._snake_case_name }}_flag()) {
    if (!ret.empty()) {
      ret += ", ";
    }
    ret += "{{ def.name | replace('_FLAG', '') }}";
  }
{%     endif %}
{% endfor %}
  return ret;
}


{% for def in settings %}
{%     if def._is_ha_text_sensor %}
void BQ25798TextSensor::assign_text_sensor_{{ def._snake_case_name }}(text_sensor::TextSensor *sensor) {
  this->text_sensor_{{ def._snake_case_name }}_ = sensor;
}
{%     endif %}
{% endfor %}
void BQ25798TextSensor::assign_text_sensor_all_flags(text_sensor::TextSensor *sensor) {
  this->text_sensor_all_flags_ = sensor;
}
}  // namespace bq25798
}  // namespace esphome